#!/bin/bash

# base settings
PROG=`basename $0`
ARGS="${@}"
if [ "$MOCK_DIR" = "" ]; then
    MOCK_DIR=.
fi
MOCK_LOG=$MOCK_DIR/$PROG.mocklog
COUNTFILE=$MOCK_DIR/.mockcount.tmp

# functionality to help with mock memory
load_mock_count() {
    COUNTFILE=.mockcount.tmp
    touch $COUNTFILE
    source $COUNTFILE
}

save_mock_count() {
    count_name=${prog}_count
    TMPFILE=`tempfile`
    mv $COUNTFILE $TMPFILE
    grep -v ${count_name} $TMPFILE > $COUNTFILE
    rm $TMPFILE
    echo ${prog}_count=${!count_name} >> $COUNTFILE
}

incr_mock_count() {
    prog=$1
    count_name=${prog}_count
    if [ "${!count_name}" = "" ]; then
        eval ${prog}_count=0
    else
        eval ${prog}_count=`expr ${!count_name} + 1`
    fi
    # echo ${count_name}: ${!count_name}
    export ${prog}_count
}

# load / increment / save the number of times this mock has been run
load_mock_count
incr_mock_count $PROG
save_mock_count

iter_count_name=${PROG}_count
fn_name=mock.${PROG}.${!iter_count_name}
if [ "`type -t ${fn_name}`" = "function" ]; then
    eval ${fn_name}
fi

# save the log of what our arguments were
touch $MOCK_LOG
echo $ARGS >> $MOCK_LOG

# exit successfully
exit 0